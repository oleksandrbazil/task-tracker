{"version":3,"sources":["redux/modules/modal.js","redux/modules/confirmDialog.js","utilities/taskGenerator/index.js","redux/modules/tasks.js","redux/modules/currentTask.js","localStorage/index.js","redux/rootSaga.js","redux/store.js","utilities/prettyTime/index.js","components/TasksLog/index.jsx","utilities/buildChartData/index.js","components/TasksChart/index.jsx","components/TaskTabs/tabs.js","components/TaskTabs/index.jsx","pages/HomePage/index.jsx","components/TaskNotFound/index.jsx","components/TaskInfo/index.jsx","pages/TaskPage/index.jsx","pages/PageNotFound/index.jsx","components/TaskTimer/index.jsx","components/TaskForm/index.jsx","pages/AppRoutes.jsx","theme/index.js","components/ModalMessage/index.jsx","components/ConfirmDialog/index.jsx","App.js","serviceWorker.js","index.js"],"names":["showModal","OPEN_MODAL","initialState","isOpen","title","message","closeModal","type","payload","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","put","stop","_marked","confirmDialogWorker","SHOW_DIALOG","CONFIRM_DIALOG","hideDialog","confirmDialog","take","confirmDialog_marked","getRandomInt","min","max","Math","floor","random","generateRandom","oneByOne","tasks","now","Date","today","toLocaleDateString","tomorrow","setDate","getDate","numberOfTasks","id","start","valueOf","prevTask","end","finish","name","concat","setMinutes","getMinutes","push","tryAddTask","tryRemoveTask","tryGenerateTasks","tasksWatcher","TRY_ADD_TASK","TRY_REMOVE_TASK","TRY_GENERATE_TASKS","ADD_TASK","REMOVE_TASK","IMPORT_TASKS","REMOVE_ALL_TASKS","removeTask","_ref","sagaData","generateTasks","selectTasks","state","action","task","select","sent","dataSaga","t0","delegateYield","tasks_marked","_action$sagaData","_args2","_context2","t1","_marked2","_action$sagaData2","_args3","_context3","call","_marked3","_context4","takeLatest","_marked4","tryFinishTask","currentTaskWatcher","TRY_FINISH_TASK","START_TASK","UPDATE_TASK","CLEAR_TASK","getDatetime","startTask","updateTask","finishTask","_ref2","callback","selectCurrentTask","currentTask","Object","keys","forEach","key","e","Error","currentTask_marked","currentTask_marked2","saveState","serializedState","JSON","stringify","localStorage","setItem","saveStateToLocalStorage","globalWatcher","rootSaga","rootSaga_marked","rootSaga_marked2","all","rootSaga_marked3","reducers","combineReducers","objectSpread","_action$payload","_action$payload$start","_action$payload$name","_action$payload$end","filter","modal","preloadedState","getItem","parse","loadState","sagaMiddleware","createSagaMiddleware","enhancers","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","composedEnhancers","compose","apply","applyMiddleware","createStore","run","prettyTime","datetime","timeString","moment","isValid","format","prettyTimeDiff","startDatetime","finishDatetime","utc","diff","withStyles","theme","button","margin","connect","dispatch","bindActionCreators","classes","react_default","createElement","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","item","index","Button_default","component","Link","to","className","onClick","BarItem","stackId","classCallCheck","this","fill","toString","substr","TimeSlot","hours","set","minutes","seconds","milliseconds","intervals","taskId","millisecondsSpent","Number","toFixed","buildChartData","overlayMode","returnData","data","bars","_ref3","startedAt","finishedAt","startHour","finishHour","spentHours","_loop","hour","targetHour","taskSlotName","slot","find","v","minute","second","spentMilliseconds","isOverlay","interval","b","addSpentTime","_ret","Index","props","_this","possibleConstructorReturn","getPrototypeOf","generateOneByOne","rebuildData","nextProps","_this2","setState","_buildChartData","_this3","_this$state","ref","rootEl","es6","width","height","strokeDasharray","dataKey","domain","legendType","style","float","FormControlLabel_default","control","Checkbox_default","checked","onChange","label","toggleOverlayMode","maxWidth","React","Component","tabs","path","components","default","TasksLog","TasksChart","event","value","preventDefault","_this$props","_this$props$history","history","location","pathname","AppBar_default","position","Tabs_default","handleChangeTab","variant","Tab_default","fullWidth","react_router","exact","withRouter","HomePage","TaskTabs","TaskNotFound","Typography_default","container","display","flexDirection","flexWrap","formControl","spacing","unit","match","params","parseInt","FormControl_default","TextField_default","disabled","FormLabel_default","InputLabelProps","shrink","TaskPage","color","url","Task","textAlign","TaskTimer","timer","setTimer","unsetTimer","nextContext","setInterval","getTime","clearInterval","root","borderRadius","justifyContent","alignItems","palette","primary","fontSize","boxShadow","renameTask","resetForm","target","_this$props2","onSubmit","handleOnSubmit","form","Input_default","placeholder","handleOnChange","onBlur","handleOnBlur","components_TaskTimer","tabPaths","AppRoutes","TaskForm","PageNotFound","createMuiTheme","indigo","overrides","MuiInput","underline","MuiButton","text","backgroundColor","&:hover","MuiAppBar","cyan","MuiTableHead","MuiTableBody","MuiTableCell","typography","useNextVariants","top","left","transform","background","paper","shadows","padding","outline","closeButton","Modal_default","open","onClose","ConfirmDialog","contentText","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","defaultProps","App","styles","Grid_default","justify","xs","components_ConfirmDialog","ModalMessage","Boolean","hostname","ReactDOM","render","es","store","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e11faa3.chunk.js","sourcesContent":["import { put } from 'redux-saga/effects';\n\n// Action Types\nexport const OPEN_MODAL = 'modal/OPEN_MODAL';\nexport const CLOSE_MODAL = 'modal/CLOSE_MODAL';\n\nconst initialState = {\n  isOpen: false,\n  title: '',\n  message: '',\n};\n\n// Reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        isOpen: true,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    case CLOSE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n  payload: {\n    isOpen: false,\n  },\n});\n\n// Redux Saga Workers\nexport function* showModal(title = 'Error', message = null) {\n  yield put({\n    type: OPEN_MODAL,\n    payload: {\n      title: title,\n      message: message,\n    },\n  });\n}\n","import { put, take } from 'redux-saga/effects';\nexport const SHOW_DIALOG = 'confirmDialog/SHOW_DIALOG';\nexport const HIDE_DIALOG = 'confirmDialog/HIDE_DIALOG';\nexport const CONFIRM_DIALOG = 'confirmDialog/HIDE_CONFIRM_DIALOG';\n\nconst initialState = {\n  isOpen: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_DIALOG:\n      return {\n        isOpen: true,\n      };\n    case HIDE_DIALOG:\n    case CONFIRM_DIALOG:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const hideDialog = () => ({\n  type: HIDE_DIALOG,\n});\n\nexport const confirmDialog = () => ({\n  type: CONFIRM_DIALOG,\n});\n\n// Action Workers\nexport function* confirmDialogWorker() {\n  yield put({\n    type: SHOW_DIALOG,\n  });\n\n  yield take(CONFIRM_DIALOG);\n}\n","const MIN_TASKS = 10; // items\nconst MAX_TASKS = 15; // items\nconst MIN_DURATION = 10; // minutes\nconst MAX_DURATION = 90; // minutes\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n/**\n *\n * @param oneByOne - boolean. Make possible generate random tasks one by one without delays\n * @returns {Array}\n */\nexport const generateRandom = (oneByOne = false) => {\n  let tasks = [];\n  const now = new Date();\n  const today = new Date(now.toLocaleDateString());\n  const tomorrow = new Date(new Date().setDate(today.getDate() + 1));\n  const numberOfTasks = getRandomInt(MIN_TASKS, MAX_TASKS);\n\n  for (let id = 1; id < numberOfTasks; id++) {\n    let start = getRandomInt(today.valueOf(), tomorrow.valueOf());\n    // if oneByOne mode we have to start new task right after previous one\n    if (oneByOne) {\n      const DELTA_ID = 2;\n      const prevTask = tasks[id - DELTA_ID];\n      if (typeof prevTask === 'object') {\n        // We have to setup start as end of previout task with 1 millisecond delay,\n        // cause we will check if any task is overlaying on another one\n        start = prevTask.end + 1;\n      }\n    }\n    const finish = new Date(start);\n    const name = `Random task #${id}`;\n    const end = getRandomInt(\n      finish.setMinutes(finish.getMinutes() + MIN_DURATION).valueOf(),\n      finish.setMinutes(finish.getMinutes() + MAX_DURATION).valueOf()\n    );\n\n    tasks.push({\n      id,\n      start,\n      name,\n      end,\n    });\n  }\n\n  return tasks;\n};\n\nexport default null;\n","import { takeLatest, select, put, call } from 'redux-saga/effects';\nimport { showModal } from './modal';\nimport { confirmDialogWorker } from './confirmDialog';\nimport { generateRandom } from '../../utilities/taskGenerator';\n\n// Action Types\nexport const TRY_ADD_TASK = 'tasks/TRY_ADD_TASK';\nexport const TRY_REMOVE_TASK = 'tasks/TRY_REMOVE_TASK';\nexport const TRY_GENERATE_TASKS = 'tasks/TRY_GENERATE_TASKS';\nexport const ADD_TASK = 'tasks/ADD_TASK';\nexport const REMOVE_TASK = 'tasks/REMOVE_TASK';\nexport const IMPORT_TASKS = 'tasks/IMPORT_TASKS';\nexport const REMOVE_ALL_TASKS = 'tasks/REMOVE_ALL_TASKS';\n\nconst initialState = [];\n\n// Reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return state.concat([action.payload.task]);\n    case REMOVE_TASK:\n      return state.filter(task => task.id !== action.payload.id);\n    case IMPORT_TASKS:\n      return action.payload.tasks;\n    case REMOVE_ALL_TASKS:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nexport const removeTask = ({ id }) => ({\n  type: TRY_REMOVE_TASK,\n  sagaData: { id },\n});\n\nexport const generateTasks = (oneByOne = false) => ({\n  type: TRY_GENERATE_TASKS,\n  sagaData: { oneByOne },\n});\n\n// Redux Selectors\nexport const selectTasks = state => state.tasks;\n\n// Redux Saga Workers\nfunction* tryAddTask(action = {}) {\n  try {\n    const tasks = yield select(selectTasks);\n    const {\n      dataSaga: { task },\n    } = action;\n\n    // define task id depend on the last item in array\n    task.id = tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1;\n\n    // Add currentTask to TaskList\n    yield put({\n      type: ADD_TASK,\n      payload: {\n        task,\n      },\n    });\n  } catch (e) {\n    yield* showModal(e.title, e.message);\n  }\n}\n\nexport function* tryRemoveTask(action = {}) {\n  try {\n    const { sagaData: { id } = {} } = action;\n\n    yield* confirmDialogWorker();\n\n    yield put({\n      type: REMOVE_TASK,\n      payload: {\n        id,\n      },\n    });\n  } catch (e) {\n    yield* showModal(e.title, e.message);\n  }\n}\n\nfunction* tryGenerateTasks(action = {}) {\n  try {\n    const { sagaData: { oneByOne } = {} } = action;\n    const tasks = yield call(generateRandom, oneByOne);\n\n    yield put({\n      type: REMOVE_ALL_TASKS,\n      payload: {},\n    });\n\n    yield put({\n      type: IMPORT_TASKS,\n      payload: {\n        tasks,\n      },\n    });\n  } catch (e) {\n    yield* showModal(e.title, e.message);\n  }\n}\n\n// Redux Saga Watcher\nexport function* tasksWatcher() {\n  yield takeLatest(TRY_ADD_TASK, tryAddTask);\n  yield takeLatest(TRY_REMOVE_TASK, tryRemoveTask);\n  yield takeLatest(TRY_GENERATE_TASKS, tryGenerateTasks);\n}\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { showModal } from './modal';\nimport { TRY_ADD_TASK } from './tasks';\n\n// Action Types\nexport const TRY_FINISH_TASK = 'currentTask/TRY_FINISH_TASK';\nexport const START_TASK = 'currentTask/START_TASK';\nexport const UPDATE_TASK = 'currentTask/UPDATE_TASK';\nexport const FINISH_TASK = 'currentTask/FINISH_TASK';\nexport const CLEAR_TASK = 'currentTask/CLEAR_TASK';\n\nconst initialState = {\n  name: '',\n  start: '',\n  end: '',\n};\n\n// Reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case START_TASK:\n      return {\n        ...state,\n        start: action.payload.start,\n      };\n    case UPDATE_TASK:\n      // try to get payload values\n      const {\n        start = state.start,\n        name = state.name,\n        end = state.end,\n      } = action.payload;\n\n      return {\n        start,\n        name,\n        end,\n      };\n    case FINISH_TASK:\n      return {\n        ...state,\n        end: action.payload.end,\n      };\n    case CLEAR_TASK:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Helper\nfunction getDatetime() {\n  return new Date().valueOf();\n}\n\n// Action Creators\nexport const startTask = () => {\n  const start = getDatetime();\n  return {\n    type: START_TASK,\n    payload: {\n      start,\n    },\n  };\n};\n\nexport const updateTask = ({ name, start, end }) => {\n  return {\n    type: UPDATE_TASK,\n    payload: {\n      start,\n      name,\n      end,\n    },\n  };\n};\n\nexport const finishTask = ({ callback }) => {\n  const end = getDatetime();\n  return {\n    type: TRY_FINISH_TASK,\n    sagaData: {\n      end,\n      callback,\n    },\n  };\n};\n\n// Redux Selector\nexport const selectCurrentTask = state => state.currentTask;\n\n// Redux Saga Workers\nexport function* tryFinishTask(action = {}) {\n  try {\n    const { sagaData: { end, callback } = {} } = action;\n    let task = yield select(selectCurrentTask);\n    task.end = end;\n\n    // check if any key has empty value\n    Object.keys(task).forEach(key => {\n      const value = task[key];\n      if (!value) {\n        let message;\n        switch (key) {\n          case 'name':\n            message = `You are trying to finish task without ${key}, enter the title and try again`;\n            break;\n          default:\n            message = `You are trying to finish task without ${key}. `;\n            break;\n        }\n        let e = new Error(message);\n        e.title = `Empty task ${key}`;\n        throw e;\n      }\n    });\n\n    yield put({\n      type: TRY_ADD_TASK,\n      dataSaga: {\n        task,\n      },\n    });\n\n    // reset current task\n    yield put({\n      type: CLEAR_TASK,\n    });\n\n    // reset component state\n    if (typeof callback === 'function') {\n      callback();\n    }\n  } catch (e) {\n    yield* showModal(e.title, e.message);\n  }\n}\n\n// Redux Saga Watcher\nexport function* currentTaskWatcher() {\n  yield takeLatest(TRY_FINISH_TASK, tryFinishTask);\n}\n","const storeItemKey = 'state';\n\n/**\n * Try to load state from localStorage\n * Do nothing if user disabled localStorage\n * @returns {*}\n */\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(storeItemKey);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\n/**\n * Try to save Redux store into localStorage.\n * This function doesn't cover case when user disabled localStorage\n * @param state - object\n */\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(storeItemKey, serializedState);\n  } catch (e) {\n    // do something\n  }\n};\n","import { all, select, takeLatest } from 'redux-saga/effects';\nimport {\n  REMOVE_TASK,\n  IMPORT_TASKS,\n  tasksWatcher,\n  selectTasks,\n} from './modules/tasks';\nimport {\n  START_TASK,\n  UPDATE_TASK,\n  CLEAR_TASK,\n  selectCurrentTask,\n  currentTaskWatcher,\n} from './modules/currentTask';\nimport { saveState } from '../localStorage';\n\n// Redux Saga Workers\nfunction* saveStateToLocalStorage() {\n  const tasks = yield select(selectTasks);\n  const currentTask = yield select(selectCurrentTask);\n  saveState({ tasks, currentTask });\n}\n\n// Redux Saga: Global Watcher\nfunction* globalWatcher() {\n  // We better user last actionType intead of real meaning to make sure we will have correct structure of State\n  // ADD_TASK => CLEAR_TASK\n  // REMOVE_ALL_TASKS => IMPORT_TASKS\n  yield takeLatest(\n    [START_TASK, UPDATE_TASK, CLEAR_TASK, REMOVE_TASK, IMPORT_TASKS],\n    saveStateToLocalStorage\n  );\n}\n\nexport default function* rootSaga() {\n  yield all([globalWatcher(), currentTaskWatcher(), tasksWatcher()]);\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './rootSaga';\nimport { loadState } from '../localStorage';\nimport currentTask from './modules/currentTask';\nimport modal from './modules/modal';\nimport tasks from './modules/tasks';\nimport confirmDialog from './modules/confirmDialog';\n\nconst reducers = combineReducers({ currentTask, tasks, modal, confirmDialog });\nconst preloadedState = loadState();\nconst sagaMiddleware = createSagaMiddleware();\n\nconst enhancers = [];\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\nif (typeof devToolsExtension === 'function') {\n  enhancers.push(devToolsExtension());\n}\nconst composedEnhancers = compose(\n  applyMiddleware(sagaMiddleware),\n  ...enhancers\n);\n\nexport default createStore(reducers, preloadedState, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n","import moment from 'moment';\n\nconst TIME_FORMAT = 'HH:mm:ss';\nexport const TIME_PLACEHOLDER = '00:00:00';\n\n/**\n *\n * @param datetime\n * @returns {string}\n */\nexport const prettyTime = datetime => {\n  let timeString = TIME_PLACEHOLDER;\n  const start = moment(datetime);\n  if (start.isValid()) {\n    timeString = start.format(TIME_FORMAT);\n  }\n  return timeString;\n};\n\n/**\n *\n * @param startDatetime\n * @param finishDatetime\n * @returns {string}\n */\nexport const prettyTimeDiff = (startDatetime, finishDatetime) => {\n  let timeString = TIME_PLACEHOLDER;\n  const start = moment(startDatetime);\n  const finish = moment(finishDatetime);\n\n  if (start.isValid() && finish.isValid()) {\n    timeString = moment.utc(finish.diff(start)).format(TIME_FORMAT);\n  }\n  return timeString;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { removeTask } from '../../redux/modules/tasks';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { prettyTime, prettyTimeDiff } from '../../utilities/prettyTime';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    margin: '10px',\n  },\n});\n\nconst Index = ({ tasks, removeTask, classes }) => {\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell>Task</TableCell>\n            <TableCell>Time start</TableCell>\n            <TableCell>Time end</TableCell>\n            <TableCell>Time spend</TableCell>\n            <TableCell>Info</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tasks.map((item, index) => {\n            const { id, name, start, end } = item;\n            return (\n              <TableRow key={`row${index}`}>\n                <TableCell>{id}</TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{prettyTime(start)}</TableCell>\n                <TableCell>{prettyTime(end)}</TableCell>\n                <TableCell>{prettyTimeDiff(start, end)}</TableCell>\n                <TableCell>\n                  <Button component={Link} to={`/tasks/${id}`}>\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    className={classes.button}\n                    onClick={() => removeTask({ id })}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ removeTask }, dispatch);\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Index)\n);\n","import moment from 'moment';\n\nexport const HOURS_IN_DAY = 24;\nconst MILLISECONDS_IN_MINUTE = 60 * 1000;\n\nclass BarItem {\n  constructor({ id, stackId }) {\n    this.id = id;\n    this.stackId = stackId ? 'allInOne' : null;\n    this.fill = `#${Math.random()\n      .toString(16)\n      .substr(-6)}`;\n  }\n}\n\n// Use Class to make sure all props will be accessible and task spent time will be saved correctly\nclass TimeSlot {\n  constructor({ hours }) {\n    this.min = moment()\n      .utc()\n      .set({\n        hours,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n      });\n    this.max = moment()\n      .utc()\n      .set({\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n      });\n    this.name = this.min.format('HH:mm');\n    this.intervals = [];\n  }\n\n  /**\n   * addSpentTime just adding new task item into Time Slot\n   * @param taskId - must be unique id\n   * @param millisecondsSpent - timestamp in milliseconds, will be convertet into minutes\n   */\n  addSpentTime(taskId, millisecondsSpent) {\n    this[taskId] = Number(millisecondsSpent / MILLISECONDS_IN_MINUTE).toFixed(\n      2\n    );\n  }\n}\n\n/**\n * buildChartData function is help to build required data array for ReCharts feature.\n * @param tasks - array of tasks with props {id,name,start,end}\n * @param overlayMode - Boolean.\n * @returns {Object} with data and bars arrays\n */\nexport const buildChartData = (tasks = [], overlayMode = false) => {\n  let returnData = {\n    data: [],\n    bars: [],\n  };\n\n  // 1. Build basic data array with 24 items for each hour\n  for (let hours = 0; hours < HOURS_IN_DAY; hours++) {\n    returnData.data.push(new TimeSlot({ hours }));\n  }\n\n  // 2. Loop trough the task array\n  tasks.forEach(({ id, name, start, end }) => {\n    // 1. SMALL VALIDATION\n    // 1.1 - Skip Current Task if there is no required task props\n    if (!id || !name || !start || !end) {\n      return;\n    }\n    const startedAt = moment(start);\n    const finishedAt = moment(end);\n\n    // 1.2 - Skip Current Task if there is invalid datetime\n    if (!startedAt.isValid() || !finishedAt.isValid()) {\n      return;\n    }\n\n    // 2. PREPARE DATA\n    const startHour = startedAt.hours();\n    const finishHour = finishedAt.hours();\n    let spentHours = 1; //we will going trough the loop so it's important to have value more than 0\n\n    // Define correct number of hours which are related to the current Task\n    if (finishHour > startHour) {\n      spentHours += finishHour - startHour;\n    } else if (finishHour < startHour) {\n      // Here we calculate hours for task which are going trough the middle of the night\n      // (Task was started today and will be finished technically tomorrow)\n      spentHours += HOURS_IN_DAY + finishHour - startHour;\n    }\n\n    // 3. LOOP THROUGH THE TASK SPENT HOURS\n    for (let hour = 0; hour < spentHours; hour++) {\n      // We have to select correct Time Slot by targetHour to make sure put values into correspond Time Slot\n      // We also need to cover case when index increase up to 24  => reset to 0\n      let targetHour = startHour + hour;\n      targetHour -= targetHour >= HOURS_IN_DAY ? HOURS_IN_DAY : 0;\n\n      const taskSlotName = moment\n        .utc()\n        .hours(targetHour)\n        .minutes(0)\n        .format('HH:mm');\n\n      let slot = returnData.data.find(slot => slot.name === taskSlotName);\n\n      // Skip Current Task if TimeSlot is not found. Should never happen\n      if (!slot) {\n        return;\n      }\n\n      // Let's prepare datetime values for comparing.\n      // It's important to use UTC datetime\n      const min = slot.min;\n      const max = slot.max;\n\n      let start = moment(slot.min).set({\n          hour: startedAt.hours(),\n          minute: startedAt.minutes(),\n          second: startedAt.seconds(),\n          milliseconds: startedAt.milliseconds(),\n        }),\n        finish = moment(slot.min).set({\n          hour: finishedAt.hours(),\n          minute: finishedAt.minutes(),\n          second: finishedAt.seconds(),\n          milliseconds: finishedAt.milliseconds(),\n        });\n\n      // We have to limit start and finish values by current time slot\n      start = start <= min || start > max ? min : start;\n      finish = finish <= min || finish > max ? max : finish;\n\n      // Count difference in milliseconds\n      const spentMilliseconds = finish.valueOf() - start.valueOf();\n\n      // 3. If it's DEFAULT mode, we have to care about task overlays, if there is one of them we will remove Overlay Task from an array\n      if (!overlayMode) {\n        let isOverlay = false;\n        slot.intervals.forEach(interval => {\n          const a =\n            start.valueOf() >= interval.start &&\n            start.valueOf() <= interval.finish;\n          const b =\n            finish.valueOf() >= interval.start &&\n            finish.valueOf() <= interval.finish;\n          if (a || b) {\n            isOverlay = true;\n          }\n        });\n\n        // Skip Current Task because it's overlay on the timeline of another Task\n        if (isOverlay) {\n          return;\n        }\n\n        slot.intervals.push({\n          id,\n          start: start.valueOf(),\n          finish: finish.valueOf(),\n          spentMilliseconds,\n        });\n      }\n\n      // Finally, add task item\n      slot.addSpentTime(id, spentMilliseconds);\n    }\n\n    // Add task item into bar array. If it's DEFAULT mode we would like to show all TimeSlot spent time in one Bar\n    returnData.bars.push(new BarItem({ id, stackId: !overlayMode }));\n  });\n\n  return returnData;\n};\n\nexport default buildChartData;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { generateTasks } from '../../redux/modules/tasks';\nimport buildChartData from '../../utilities/buildChartData';\nimport {\n  BarChart,\n  ResponsiveContainer,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n} from 'recharts';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      overlayMode: false,\n      generateOneByOne: false,\n      data: [],\n      bars: [],\n    };\n  }\n\n  componentDidMount() {\n    const { tasks } = this.props;\n    this.rebuildData(tasks);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.tasks !== this.props.tasks) {\n      this.rebuildData(nextProps.tasks);\n    }\n  }\n\n  toggleOverlayMode() {\n    const { overlayMode } = this.state;\n    const { tasks } = this.props;\n    this.setState({ overlayMode: !overlayMode }, () => this.rebuildData(tasks));\n  }\n\n  rebuildData(tasks) {\n    const { overlayMode } = this.state;\n    const { data, bars } = buildChartData(tasks, overlayMode);\n    this.setState({\n      data,\n      bars,\n    });\n  }\n\n  render() {\n    const { overlayMode, data, bars, generateOneByOne } = this.state;\n    const { generateTasks } = this.props;\n\n    return (\n      <div ref={this.rootEl}>\n        <ResponsiveContainer width=\"100%\" height={600}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis domain={[0, 60]} />\n            <Tooltip />\n            <Legend legendType=\"circle\" />\n            {bars.map(({ id, stackId, fill }) => (\n              <Bar key={id} dataKey={id} stackId={stackId} fill={fill} />\n            ))}\n          </BarChart>\n        </ResponsiveContainer>\n        <div>\n          <div style={{ float: 'right' }}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={generateOneByOne}\n                  onChange={() =>\n                    this.setState({ generateOneByOne: !generateOneByOne })\n                  }\n                />\n              }\n              label={'generateOneByOne'}\n            />\n            <Button onClick={() => generateTasks(generateOneByOne)}>\n              GENERATE\n            </Button>\n          </div>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={overlayMode}\n                onChange={() => this.toggleOverlayMode()}\n              />\n            }\n            label={'OVERLAY mode'}\n          />\n          <div style={{ maxWidth: '700px' }}>\n            <p>\n              Трекер разработан на основе предпосылки что в определенный момент\n              времени может выполняться только 1 задача. По этому, в построенном\n              графике не может быть более 60 минут в 1 часе.\n            </p>\n            <p>\n              В тоже время, генератор случайных задач не учитывает временные\n              наложения задач между собой при построении массива. Это может\n              создать ситуацию при которой 2 задачи выполняються одновременно.\n            </p>\n            <p>\n              В этом случае задача которая накладываеться на другую задачу не\n              будет показана на графике, для того что бы увидеть такую задачу\n              нужно переключиться в \"overlayMode\" мод.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      generateTasks,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Index);\n","export default [\n  {\n    path: '/',\n    label: 'Task Logs',\n    component: 'TasksLog',\n  },\n  {\n    path: '/chart',\n    label: 'Task Chart',\n    component: 'TasksChart',\n  },\n];\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TasksLog from '../TasksLog';\nimport TasksChart from '../TasksChart';\nimport tabs from './tabs';\n\nconst components = {\n  default: TasksLog,\n  TasksLog: TasksLog,\n  TasksChart: TasksChart,\n};\n\nclass Index extends React.Component {\n  handleChangeTab(event, value) {\n    event.preventDefault();\n    const {\n      history = {},\n      location: { pathname },\n    } = this.props;\n    if (pathname !== value) {\n      history.push(value);\n    }\n  }\n\n  render() {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Tabs\n            value={pathname}\n            onChange={(event, value) => {\n              this.handleChangeTab(event, value);\n            }}\n            variant=\"fullWidth\"\n          >\n            {tabs.map((item, index) => (\n              <Tab\n                key={`label_${index}`}\n                label={item.label}\n                value={item.path}\n                fullWidth\n              />\n            ))}\n          </Tabs>\n        </AppBar>\n        <Switch>\n          {tabs.map((item, index) => (\n            <Route\n              key={`component_${index}`}\n              path={item.path}\n              exact\n              component={components[item.component] || components.default}\n            />\n          ))}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React from 'react';\nimport TaskTabs from '../../components/TaskTabs';\n\nexport default () => (\n  <div>\n    <TaskTabs />\n  </div>\n);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default () => (\n  <div>\n    <Typography variant=\"h4\">Task not found</Typography>\n  </div>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { prettyTime, prettyTimeDiff } from '../../utilities/prettyTime';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport TaskNotFound from '../TaskNotFound';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    display: 'block',\n    width: 200,\n  },\n});\n\nexport const Index = ({ classes, task }) => {\n  if (!task) {\n    return <TaskNotFound />;\n  }\n  const { id, name, start, end } = task;\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Task Info</Typography>\n      <form className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <TextField id=\"id\" label=\"ID\" type=\"text\" value={id} disabled />\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <FormLabel>Name</FormLabel>\n          <TextField id=\"name\" label=\"Name\" type=\"text\" value={name} />\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <FormLabel>\n            <span>Started At: </span>\n            {prettyTime(start)}\n          </FormLabel>\n          <TextField\n            id=\"start\"\n            label=\"TimeStart\"\n            type=\"text\"\n            value={task.start}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <FormLabel>\n            <span>Finished At: </span>\n            {prettyTime(end)}\n          </FormLabel>\n          <TextField\n            id=\"end\"\n            label=\"TimeEnd\"\n            type=\"text\"\n            value={task.end}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <FormLabel>\n            <span>Spent: </span>\n            {prettyTimeDiff(start, end)}\n          </FormLabel>\n        </FormControl>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (\n  state,\n  {\n    match: {\n      params: { taskId },\n    },\n  }\n) => {\n  return {\n    task: state.tasks.find(task => task.id === parseInt(taskId)),\n  };\n};\nexport default withStyles(styles)(connect(mapStateToProps)(Index));\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Task from '../../components/TaskInfo';\nimport TaskNotFound from '../../components/TaskNotFound';\n\nexport default ({ match }) => {\n  return (\n    <div>\n      <Button component={Link} to=\"/\" color=\"secondary\">\n        Homepage\n      </Button>\n      <Switch>\n        <Route exact path={`${match.url}/:taskId`} component={Task} />\n        <Route component={TaskNotFound} />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nconst Index = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Typography variant=\"h1\">404</Typography>\n      <Button component={Link} to=\"/\" color=\"secondary\">\n        to Homepage\n      </Button>\n      <Typography variant=\"h6\">Page not found</Typography>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { prettyTimeDiff } from '../../utilities/prettyTime';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst initialState = {\n  end: '',\n};\n\nconst styles = theme => ({\n  root: {\n    height: '200px',\n    width: '200px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: theme.palette.primary['900'],\n    margin: 20,\n    fontSize: 30,\n    boxShadow:\n      '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n  },\n});\n\nclass TaskTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    if (this.props.start) {\n      this.setTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsetTimer();\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.start) {\n      this.setTimer();\n    } else {\n      this.unsetTimer();\n    }\n  }\n\n  setTimer() {\n    if (!this.timer) {\n      this.timer = setInterval(() => {\n        this.setState({ end: new Date().getTime() });\n      }, 1000);\n    }\n  }\n\n  unsetTimer() {\n    clearInterval(this.timer);\n    this.timer = null;\n    this.setState(initialState);\n  }\n\n  render() {\n    // We better to update just component state instead of updating each second Redux Store\n    // That's why we get 'start' when 'end' from state\n    const { classes, start } = this.props;\n    const { end } = this.state;\n    return <div className={classes.root}>{prettyTimeDiff(start, end)}</div>;\n  }\n}\n\nexport default withStyles(styles)(TaskTimer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  startTask,\n  updateTask,\n  finishTask,\n} from '../../redux/modules/currentTask';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport TaskTimer from '../TaskTimer';\n\nconst initialState = {\n  name: '',\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  form: {\n    textAlign: 'center',\n    margin: 20,\n  },\n});\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props;\n    this.state = {\n      ...initialState,\n      name,\n    };\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    const { start, startTask, finishTask } = this.props;\n\n    // try to save task name anyway\n    this.renameTask();\n\n    // select required action\n    if (start) {\n      finishTask({ callback: () => this.resetForm() });\n    } else {\n      startTask();\n    }\n  }\n  resetForm() {\n    this.setState(initialState);\n  }\n\n  handleOnChange(e) {\n    // We could update right now currentTask in Redux Store,\n    // but this will lead to running LocalStorage.saveState() method with JSON.stringify.\n    // It's not a good idea because stringify is resource-intensive method\n    this.setState({ name: e.target.value });\n  }\n\n  handleOnBlur() {\n    this.renameTask();\n  }\n\n  renameTask() {\n    const { name } = this.state;\n    const { updateTask } = this.props;\n    updateTask({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n    const { start, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <form onSubmit={e => this.handleOnSubmit(e)} className={classes.form}>\n          <FormControl>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              placeholder=\"Name of your task\"\n              onChange={e => this.handleOnChange(e)}\n              onBlur={() => this.handleOnBlur()}\n            />\n          </FormControl>\n\n          <TaskTimer start={start} />\n\n          <Button type=\"submit\">{start ? 'Stop' : 'Start'}</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  name: state.currentTask.name,\n  start: state.currentTask.start,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      startTask,\n      finishTask,\n      updateTask,\n    },\n    dispatch\n  );\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Index)\n);\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport HomePage from './HomePage';\nimport TaskPage from './TaskPage';\nimport PageNotFound from './PageNotFound';\nimport TaskForm from '../components/TaskForm';\nimport tabs from '../components/TaskTabs/tabs';\n\nconst tabPaths = tabs.map(item => item.path);\n\nexport default () => (\n  <div>\n    <TaskForm />\n    <Switch>\n      <Route path={tabPaths} exact component={HomePage} />\n      <Route path=\"/tasks\" component={TaskPage} />\n      <Route component={PageNotFound} />\n    </Switch>\n  </div>\n);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\nimport indigo from '@material-ui/core/colors/indigo';\n\nconst white = '#FFFFFF';\nconst milWhite = '#fdfdfd';\nconst lightblue = '#eaf6ff';\n\nexport default createMuiTheme({\n  palette: {\n    primary: indigo,\n  },\n  overrides: {\n    MuiInput: {\n      underline: {\n        color: indigo['900'],\n      },\n    },\n    MuiButton: {\n      text: {\n        backgroundColor: white,\n        borderRadius: 5,\n        boxShadow:\n          '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        color: indigo['900'],\n\n        '&:hover': {\n          backgroundColor: indigo['900'],\n          color: white,\n        },\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: cyan['600'],\n      },\n    },\n    MuiTableHead: {\n      root: {\n        backgroundColor: milWhite,\n      },\n    },\n    MuiTableBody: {\n      root: {\n        backgroundColor: lightblue,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        color: indigo['900'],\n      },\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { closeModal } from '../../redux/modules/modal';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  modal: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n  closeButton: {\n    float: 'right',\n  },\n});\n\nconst Index = ({ classes, isOpen, title, message, closeModal }) => {\n  return (\n    <div>\n      <Modal open={isOpen} onClose={() => closeModal()}>\n        <div className={classes.modal}>\n          <Typography variant=\"h6\" id=\"modal-title\" color={'secondary'}>\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\">{message}</Typography>\n          <Button className={classes.closeButton} onClick={() => closeModal()}>\n            Close\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  title: state.modal.title,\n  message: state.modal.message,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      closeModal,\n    },\n    dispatch\n  );\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Index)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { confirmDialog, hideDialog } from '../../redux/modules/confirmDialog';\n\nconst ConfirmDialog = ({\n  title,\n  contentText,\n  isOpen,\n  hideDialog,\n  confirmDialog,\n}) => (\n  <div>\n    <Dialog\n      open={isOpen}\n      onClose={() => hideDialog()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {contentText}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => hideDialog()} color=\"primary\">\n          Disagree\n        </Button>\n        <Button onClick={() => confirmDialog()} color=\"primary\" autoFocus>\n          Agree\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n);\n\nConfirmDialog.defaultProps = {\n  title: 'Are you agree?',\n  contentText: null,\n};\n\nconst mapStateToProps = state => ({\n  isOpen: state.confirmDialog.isOpen,\n});\n\nconst dispatchStateToProps = dispatch =>\n  bindActionCreators(\n    {\n      hideDialog,\n      confirmDialog,\n    },\n    dispatch\n  );\nexport default connect(\n  mapStateToProps,\n  dispatchStateToProps\n)(ConfirmDialog);\n","import React from 'react';\nimport AppRoutes from './pages/AppRoutes';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport ModalMessage from './components/ModalMessage';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <Grid container justify={'center'}>\n          <Grid item xs={10}>\n            <ConfirmDialog />\n            <ModalMessage />\n            <AppRoutes />\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}