{"version":3,"sources":["actions/tasks.js","reducers/tasks.js","actions/modal.js","reducers/modal.js","reducers/index.js","localStorage/index.js","sagas/index.js","store.js","classes/Task.js","components/TaskTimer.jsx","components/TaskForm.jsx","components/TasksLog.jsx","classes/DataItems.js","components/TaskGenerator.jsx","components/TasksChart.jsx","components/TaskTabs.jsx","routes/HomePage/index.jsx","components/TaskNotFound.jsx","components/TaskInfo.jsx","routes/TaskPage/index.jsx","routes/index.js","theme/index.js","components/ModalMessage.jsx","App.js","serviceWorker.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","REMOVE_ALL_TASKS","UPDATE_CURRENT_TASK","FINISH_CURRENT_TASK","RESET_CURRENT_TASK","GENERATE_TASKS","updateCurrentTask","_ref","name","start","end","type","payload","finishTask","_ref2","callback","Date","getTime","options","removeTask","_ref3","id","generateTasks","initialState","current","list","OPEN_MODAL","closeModal","isOpen","title","message","combineReducers","tasks","state","arguments","length","undefined","action","TYPES","_action$payload","_action$payload$start","_action$payload$name","_action$payload$end","Object","objectSpread","concat","task","filter","modal","saveState","serializedState","JSON","stringify","localStorage","setItem","e","saveStateToLocalStorage","addTask","actionWorker","rootSaga","getTasksStore","regenerator_default","a","wrap","_context","prev","next","select","sent","stop","_marked","_action$action","_args2","_context2","keys","forEach","key","Error","put","t0","_marked2","MIN_TASKS","MAX_TASKS","MIN_DURATION","MAX_DURATION","now","today","tomorrow","getRandomInt","numberOfTasks","i","finish","_context3","min","max","Math","floor","random","toLocaleDateString","setDate","getDate","setMinutes","getMinutes","delegateYield","_marked3","_context4","takeEvery","takeLatest","_marked4","_context5","all","_marked5","sagaMiddleware","createSagaMiddleware","preloadedState","getItem","parse","loadState","enhancers","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","compose","apply","applyMiddleware","createStore","reducers","run","Task","_ref$start","_ref$end","classCallCheck","this","startMoment","moment","finishMoment","unit","diff","format","spent","utc","isValid","hours","TaskTimer","props","_this","possibleConstructorReturn","getPrototypeOf","call","timer","setTimer","unsetTimer","nextProps","nextContext","_this2","setInterval","setState","clearInterval","_this$props","classes","taskItem","react_default","createElement","className","root","timeSpent","React","Component","withStyles","theme","height","width","borderRadius","display","justifyContent","alignItems","color","palette","primary","margin","fontSize","boxShadow","TaskForm","preventDefault","renameTask","resetForm","target","value","_this3","_this$props2","onSubmit","handleOnSubmit","form","FormControl_default","Input_default","placeholder","onChange","handleOnChange","onBlur","handleOnBlur","components_TaskTimer","Button_default","textAlign","connect","dispatch","bindActionCreators","button","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","tableBody","map","item","index","timeStart","timeEnd","component","Link","to","onClick","HOURS_IN_DAY","DataItem","total","Number","toFixed","DataItems","data","minutes","simpleData","startHours","spentHours","targetHour","dataItem","available","getTotal","setTotal","getSimultaneousData","simultaneous","TaskGenerator","float","TasksChart","dataItems","getData","ref","rootEl","es6","strokeDasharray","dataKey","domain","legendType","stackId","fill","toString","substr","components_TaskGenerator","FormControlLabel_default","control","Checkbox_default","checked","label","style","maxWidth","TaskTabs","event","history","_this$props$history$l","location","tabRoutes","currentTab","pathname","hash","AppBar_default","position","Tabs_default","handleChangeTab","variant","Tab_default","fullWidth","components_TasksLog","components_TasksChart","withRouter","HomePage","components_TaskForm","components_TaskTabs","TaskNotFound","Typography_default","container","textField","marginLeft","spacing","marginRight","ownProps","taskId","match","params","find","t","parseInt","TextField_default","disabled","InputLabelProps","shrink","TaskPage","react_router","exact","path","url","routes","render","createMuiTheme","indigo","overrides","MuiInput","underline","MuiButton","text","backgroundColor","&:hover","MuiAppBar","cyan","MuiTableHead","MuiTableBody","MuiTableCell","typography","useNextVariants","top","left","transform","background","paper","shadows","padding","outline","closeButton","Modal_default","open","onClose","App","styles","Grid_default","justify","xs","components_ModalMessage","Boolean","hostname","ReactDOM","es","store","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.994340f6.chunk.js","sourcesContent":["//action types\nexport const ADD_TASK = 'tasks/ADD_TASK';\nexport const REMOVE_TASK = 'tasks/REMOVE_TASK';\nexport const REMOVE_ALL_TASKS = 'tasks/REMOVE_ALL_TASKS';\nexport const UPDATE_CURRENT_TASK = 'tasks/UPDATE_CURRENT_TASK';\nexport const FINISH_CURRENT_TASK = 'tasks/FINISH_CURRENT_TASK';\nexport const RESET_CURRENT_TASK = 'tasks/RESET_CURRENT_TASK';\n\nexport const GENERATE_TASKS = 'tasks/GENERATE_TASKS';\n\nexport const updateCurrentTask = ({ name, start, end }) => {\n  return {\n    type: UPDATE_CURRENT_TASK,\n    payload: {\n      start,\n      name,\n      end,\n    },\n  };\n};\n\nexport const finishTask = ({ callback }) => {\n  const end = new Date().getTime();\n  return {\n    type: FINISH_CURRENT_TASK,\n    payload: {\n      end,\n    },\n    options: {\n      callback,\n    },\n  };\n};\n\nexport const removeTask = ({ id }) => ({\n  type: REMOVE_TASK,\n  payload: {\n    id,\n  },\n});\n\nexport const generateTasks = () => ({\n  type: GENERATE_TASKS,\n  payload: {},\n});\n","import * as TYPES from '../actions/tasks';\n\nconst initialState = {\n  current: {\n    name: '',\n    start: '',\n    end: '',\n  },\n  list: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TYPES.UPDATE_CURRENT_TASK:\n      // Maybe it's not the right way, but this will reduce a few actions\n      // and make possible to simply generate new task\n      const {\n        start = state.current.start,\n        name = state.current.name,\n        end = state.current.end,\n      } = action.payload;\n\n      return {\n        ...state,\n        current: {\n          start,\n          name,\n          end,\n        },\n      };\n    case TYPES.FINISH_CURRENT_TASK:\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          end: action.payload.end,\n        },\n      };\n    case TYPES.RESET_CURRENT_TASK:\n      return {\n        ...state,\n        current: initialState.current,\n      };\n    case TYPES.ADD_TASK:\n      return {\n        ...state,\n        list: state.list.concat([action.payload.task]),\n      };\n    case TYPES.REMOVE_TASK:\n      return {\n        ...state,\n        list: state.list.filter(task => task.id !== action.payload.id),\n      };\n\n    case TYPES.REMOVE_ALL_TASKS:\n      return {\n        ...state,\n        list: [],\n      };\n    default:\n      return state;\n  }\n};\n","export const OPEN_MODAL = 'modal/OPEN_MODAL';\nexport const CLOSE_MODAL = 'modal/CLOSE_MODAL';\n\nexport const openModal = () => ({\n  type: OPEN_MODAL,\n  payload: {},\n});\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n  payload: {\n    isOpen: false,\n  },\n});\n","import * as TYPES from '../actions/modal';\n\nconst initialState = {\n  isOpen: false,\n  title: '',\n  message: '',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TYPES.OPEN_MODAL:\n      return {\n        isOpen: true,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    case TYPES.CLOSE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport modal from './modal';\n\nexport default combineReducers({ tasks, modal });\n","/**\n * Try to load state from localStorage\n * Do nothing if user disabled localStorage\n * @returns {*}\n */\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\n/**\n * Try to save Redux store into localStorage.\n * This function doesn't cover case when user disabled localStorage\n * @param state\n */\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    // do something\n  }\n};\n","import { all, select, takeLatest, takeEvery, put } from 'redux-saga/effects';\nimport {\n  ADD_TASK,\n  REMOVE_TASK,\n  UPDATE_CURRENT_TASK,\n  FINISH_CURRENT_TASK,\n  RESET_CURRENT_TASK,\n  REMOVE_ALL_TASKS,\n  GENERATE_TASKS,\n} from '../actions/tasks';\nimport { OPEN_MODAL } from '../actions/modal';\nimport { saveState } from '../localStorage';\n\n// Selectors\nconst getTasksStore = state => state.tasks;\n\n// Workers\nfunction* saveStateToLocalStorage() {\n  const tasks = yield select(getTasksStore);\n  saveState({ tasks });\n}\n\nfunction* addTask(action = {}) {\n  const { list, current } = yield select(getTasksStore);\n\n  try {\n    // check if any key has empty value\n    Object.keys(current).forEach(key => {\n      if (!current[key]) {\n        let message;\n        if (key) {\n          message = `You are trying to finish task without ${key}, enter the title and try again`;\n        } else {\n          message = `You are trying to finish task without ${key}. `;\n        }\n        let e = new Error(message);\n        e.title = `Empty task ${key}`;\n        throw e;\n      }\n    });\n\n    // define task id depend on the last item in array\n    current.id = list.length > 0 ? list[list.length - 1].id + 1 : 1;\n\n    // Add currentTask to TaskList\n    yield put({\n      type: ADD_TASK,\n      payload: {\n        task: current,\n      },\n    });\n\n    // reset current task\n    yield put({\n      type: RESET_CURRENT_TASK,\n    });\n\n    // reset component state\n    const { action: { callback } = {} } = action;\n    if (typeof callback === 'function') {\n      callback();\n    }\n  } catch (e) {\n    yield put({\n      type: OPEN_MODAL,\n      payload: {\n        title: e.title || 'Error',\n        message: e.message,\n      },\n    });\n  }\n}\n\nfunction* generateTasks() {\n  const MIN_TASKS = 10; // items\n  const MAX_TASKS = 15; // items\n  const MIN_DURATION = 10; // minutes\n  const MAX_DURATION = 90; // minutes\n\n  const now = new Date();\n  const today = new Date(now.toLocaleDateString());\n  const tomorrow = new Date(new Date().setDate(today.getDate() + 1));\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  yield put({\n    type: REMOVE_ALL_TASKS,\n    payload: {},\n  });\n\n  const numberOfTasks = getRandomInt(MIN_TASKS, MAX_TASKS);\n\n  for (let i = 0; i <= numberOfTasks; i++) {\n    const start = getRandomInt(today.getTime(), tomorrow.getTime());\n    const finish = new Date(start);\n    const name = `Random task #${i}`;\n    const end = getRandomInt(\n      finish.setMinutes(finish.getMinutes() + MIN_DURATION),\n      finish.setMinutes(finish.getMinutes() + MAX_DURATION)\n    );\n\n    yield put({\n      type: UPDATE_CURRENT_TASK,\n      payload: {\n        start,\n        name,\n        end,\n      },\n    });\n\n    yield* addTask();\n  }\n}\n\n// Watchers\nfunction* actionWorker() {\n  yield takeEvery(FINISH_CURRENT_TASK, addTask);\n  yield takeEvery(GENERATE_TASKS, generateTasks);\n  // We have to trigger by RESET_CURRENT_TASK instead of ADD_TASK,\n  // cause it make possible saveState with empty currentTask\n  yield takeLatest(\n    [UPDATE_CURRENT_TASK, REMOVE_TASK, REMOVE_ALL_TASKS, RESET_CURRENT_TASK],\n    saveStateToLocalStorage\n  );\n}\n\nexport default function* rootSaga() {\n  yield all([actionWorker()]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\nimport { loadState } from './localStorage';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst preloadedState = loadState();\n\nconst enhancers = [];\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\nif (typeof devToolsExtension === 'function') {\n  enhancers.push(devToolsExtension());\n}\nconst composedEnhancers = compose(\n  applyMiddleware(sagaMiddleware),\n  ...enhancers\n);\n\nexport default createStore(reducers, preloadedState, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n","import moment from 'moment';\n\nconst TIME_FORMAT = 'HH:mm:ss';\n\nexport default class Task {\n  constructor({ id, name, start = new Date(), end = new Date() }) {\n    this.id = id;\n    this.name = name;\n    this.startMoment = moment(start);\n    this.finishMoment = moment(end);\n  }\n\n  get timeStart() {\n    return this.startMoment.format(TIME_FORMAT);\n  }\n\n  get timeEnd() {\n    return this.finishMoment.format(TIME_FORMAT);\n  }\n\n  get timeSpent() {\n    const spent = moment.utc(this.finishMoment.diff(this.startMoment));\n\n    return spent.isValid() ? spent.format(TIME_FORMAT) : '00:00:00';\n  }\n\n  get startHours() {\n    return moment(this.startMoment).hours();\n  }\n\n  spent(unit) {\n    return this.finishMoment.diff(this.startMoment, unit);\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Task from '../classes/Task';\n\nconst initialState = {\n  end: '',\n};\n\nconst styles = theme => ({\n  root: {\n    height: '200px',\n    width: '200px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: theme.palette.primary['900'],\n    margin: 20,\n    fontSize: 30,\n    boxShadow:\n      '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n  },\n});\n\nclass TaskTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    if (this.props.start) {\n      this.setTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsetTimer();\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.start) {\n      this.setTimer();\n    } else {\n      this.unsetTimer();\n    }\n  }\n\n  setTimer() {\n    if (!this.timer) {\n      this.timer = setInterval(() => {\n        this.setState({ end: new Date().getTime() });\n      }, 1000);\n    }\n  }\n\n  unsetTimer() {\n    clearInterval(this.timer);\n    this.timer = null;\n    this.setState(initialState);\n  }\n\n  render() {\n    // We better to update just component state instead of updating each second Redux Store\n    // That's why we get 'start' when 'end' from state\n    const { classes, start } = this.props;\n    const { end } = this.state;\n    const taskItem = new Task({ start, end });\n    return (\n      <div className={classes.root}>\n        <div>{taskItem.timeSpent}</div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(TaskTimer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateCurrentTask, finishTask } from '../actions/tasks';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport TaskTimer from './TaskTimer';\n\nconst initialState = {\n  name: '',\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  form: {\n    textAlign: 'center',\n    margin: 20,\n  },\n});\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props;\n    this.state = {\n      ...initialState,\n      name,\n    };\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    const { start, finishTask, updateCurrentTask } = this.props;\n\n    // try to save task name anyway\n    this.renameTask();\n\n    // select required action\n    if (start) {\n      finishTask({ callback: () => this.resetForm() });\n    } else {\n      updateCurrentTask({ start: new Date().getTime() });\n    }\n  }\n  resetForm() {\n    this.setState(initialState);\n  }\n\n  handleOnChange(e) {\n    // We could update right now currentTask in Redux Store,\n    // but this will lead to running LocalStorage.saveState() method with JSON.stringify.\n    // It's not a good idea because stringify is resource-intensive method\n    this.setState({ name: e.target.value });\n  }\n\n  handleOnBlur() {\n    this.renameTask();\n  }\n\n  renameTask() {\n    const { name } = this.state;\n    this.props.updateCurrentTask({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n    const { start, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <form onSubmit={e => this.handleOnSubmit(e)} className={classes.form}>\n          <FormControl>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              placeholder=\"Name of your task\"\n              onChange={e => this.handleOnChange(e)}\n              onBlur={() => this.handleOnBlur()}\n            />\n          </FormControl>\n\n          <TaskTimer start={start} />\n\n          <Button type=\"submit\">{start ? 'Stop' : 'Start'}</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  name: state.tasks.current.name,\n  start: state.tasks.current.start,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      finishTask,\n      updateCurrentTask,\n    },\n    dispatch\n  );\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskForm)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Task from '../classes/Task';\nimport { removeTask } from '../actions/tasks';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    margin: '10px',\n  },\n});\n\nconst TasksLog = ({ list, removeTask, classes }) => {\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell>Task</TableCell>\n            <TableCell>Time start</TableCell>\n            <TableCell>Time end</TableCell>\n            <TableCell>Time spend</TableCell>\n            <TableCell>Info</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody className={classes.tableBody}>\n          {list.map((item, index) => {\n            const { id, name, timeStart, timeEnd, timeSpent } = new Task(item);\n            return (\n              <TableRow key={`row${index}`}>\n                <TableCell>{id}</TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{timeStart}</TableCell>\n                <TableCell>{timeEnd}</TableCell>\n                <TableCell>{timeSpent}</TableCell>\n                <TableCell>\n                  <Button component={Link} to={`/tasks/${id}`}>\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    className={classes.button}\n                    onClick={() => removeTask({ id })}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  list: state.tasks.list,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ removeTask }, dispatch);\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TasksLog)\n);\n","import Task from './Task';\nimport moment from 'moment';\n\nconst HOURS_IN_DAY = 24;\nconst MAX_TOTAL = 60; // minutes in hour\n\nclass DataItem {\n  constructor({ name }) {\n    this.name = name;\n    // We would like to use Total item to make sure each task\n    this.total = 0;\n  }\n\n  setTotal(total) {\n    this.total = Number(total).toFixed(2);\n  }\n\n  get getTotal() {\n    return Number(this.total);\n  }\n\n  setItem(name, value) {\n    this[name] = Number(value).toFixed(2);\n  }\n}\n\nexport default class DataItems {\n  constructor(tasks = []) {\n    this.tasks = tasks;\n    this.data = [];\n\n    // build basic data array\n    for (let i = 0; i < HOURS_IN_DAY; i++) {\n      const name = moment\n        .utc()\n        .hours(i)\n        .minutes(0)\n        .format('HH:mm');\n      this.data.push(new DataItem({ name }));\n    }\n  }\n\n  /**\n   * The simpleData getter returns data object for BarChart.\n   * This function is support real life case when only one task could be at the same time\n   * @returns {*[]}\n   */\n  get getData() {\n    let simpleData = [].concat(this.data);\n\n    this.tasks.forEach(item => {\n      const task = new Task(item);\n      const startHours = task.startHours;\n      const spentHours = task.spent('hours');\n      let spent = task.spent('minutes');\n\n      for (let index = 0; index <= spentHours; index++) {\n        let targetHour = startHours + index;\n\n        // We have to cover case when target hour doesn't exist,\n        // it means task pass to the new day, so reduce hours by 24\n        targetHour -= targetHour >= HOURS_IN_DAY ? HOURS_IN_DAY : 0;\n\n        let dataItem = simpleData[targetHour];\n        let available = Number(MAX_TOTAL - dataItem.getTotal);\n\n        if (available <= 0) {\n          // Actually, this case should never happen in real life because there is only one task at the same time.\n          // Skip this task at all\n          return;\n        } else if (available <= spent) {\n          dataItem.setTotal(MAX_TOTAL);\n\n          dataItem.setItem(task.name, available);\n          spent = Number(spent - available);\n        } else {\n          dataItem.setTotal(dataItem.getTotal + spent);\n          dataItem.setItem(task.name, spent);\n        }\n      }\n    });\n\n    return simpleData;\n  }\n\n  /**\n   * The getSimultaneousData getter based on the 'simpleData' getter with ability to support simultaneous tasks (several tasks at the same time),\n   * The 'simultaneous' feature required only for Random Generator feature\n   * Check TaskChart.jsx for details\n   * @returns {*[]}\n   */\n  get getSimultaneousData() {\n    let getSimultaneousData = [].concat(this.data);\n\n    this.tasks.forEach(item => {\n      const task = new Task(item);\n      const startHours = task.startHours;\n      const spentHours = task.spent('hours');\n      let spent = task.spent('minutes');\n\n      // addition variable for simultaneous tasks\n      let simultaneous = false;\n\n      for (let index = 0; index <= spentHours; index++) {\n        let targetHour = startHours + index;\n\n        // We have to cover case when target hour doesn't exist,\n        // it means task pass to the new day, so reduce hours by 24\n        targetHour -= targetHour >= HOURS_IN_DAY ? HOURS_IN_DAY : 0;\n\n        let dataItem = getSimultaneousData[targetHour];\n        let available = Number(MAX_TOTAL - dataItem.getTotal);\n\n        // Here is additional check for simultaneous tasks\n        if (available <= 0 || simultaneous) {\n          // Here is required code for simultaneous tasks\n          simultaneous = true;\n          if (spent >= MAX_TOTAL) {\n            dataItem.setItem(task.name, MAX_TOTAL);\n            spent = Number(spent - MAX_TOTAL);\n          } else {\n            dataItem.setItem(task.name, spent);\n            simultaneous = false;\n          }\n        } else if (available <= spent) {\n          dataItem.setTotal(MAX_TOTAL);\n\n          dataItem.setItem(task.name, available);\n          spent = Number(spent - available);\n        } else {\n          dataItem.setTotal(dataItem.getTotal + spent);\n          dataItem.setItem(task.name, spent);\n        }\n      }\n    });\n\n    return getSimultaneousData;\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { generateTasks } from '../actions/tasks';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    float: 'right',\n  },\n});\n\nclass TaskGenerator extends React.Component {\n  generateTasks() {\n    this.props.generateTasks();\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Button className={classes.button} onClick={() => this.generateTasks()}>\n        GENERATE\n      </Button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      generateTasks,\n    },\n    dispatch\n  );\n\nexport default withStyles(styles)(\n  connect(\n    null,\n    mapDispatchToProps\n  )(TaskGenerator)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BarChart,\n  ResponsiveContainer,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n} from 'recharts';\nimport DataItems from '../classes/DataItems';\nimport TaskGenerator from './TaskGenerator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst generateColor = () => {\n  return (\n    '#' +\n    Math.random()\n      .toString(16)\n      .substr(-6)\n  );\n};\n\nclass TasksChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      simultaneous: false,\n    };\n  }\n\n  render() {\n    const { simultaneous } = this.state;\n    const { tasks } = this.props;\n    const dataItems = new DataItems(tasks);\n    const data = simultaneous\n      ? dataItems.getSimultaneousData\n      : dataItems.getData;\n\n    return (\n      <div ref={this.rootEl}>\n        <ResponsiveContainer width=\"100%\" height={600}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" domain={[0, 60]} />\n            <YAxis />\n            <Tooltip />\n            <Legend legendType=\"circle\" />\n            {tasks.map(task => (\n              <Bar\n                key={task.id}\n                dataKey={task.name}\n                stackId={!simultaneous ? `taskOneByOne` : null}\n                fill={generateColor()}\n              />\n            ))}\n          </BarChart>\n        </ResponsiveContainer>\n        <div>\n          <TaskGenerator />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={simultaneous}\n                onChange={() => {\n                  this.setState({ simultaneous: !simultaneous });\n                }}\n              />\n            }\n            label={'Simultaneous tasks'}\n          />\n          <div style={{ maxWidth: '700px' }}>\n            <p>\n              Трекер разработан на основе предпосылки что в определенный момент\n              времени может выполняться только 1 задача. По этому, в построенном\n              графике не может быть более 60 минут в 1 часе.\n            </p>\n            <p>\n              В тоже время, генератор случайных задач не учитывает временные\n              наложения задач между собой при построении массива. Это может\n              создать ситуацию при которой 2 задачи выполняються одновременно.\n            </p>\n            <p>\n              В этом случае необходимо включить \"simultaneous\" мод, он поможет\n              увидеть наложения задач.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks.list,\n});\nexport default connect(mapStateToProps)(TasksChart);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TasksLog from './TasksLog';\nimport TasksChart from './TasksChart';\n\nclass TaskTabs extends React.Component {\n  handleChangeTab(event, value) {\n    this.props.history.push(value);\n  }\n\n  render() {\n    const {\n      history: {\n        location: { pathname, hash },\n      },\n    } = this.props;\n\n    // define available tab routes\n    const tabRoutes = {\n      log: '/',\n      chart: '/#chart',\n    };\n\n    // Catch invalid tab routes\n    const currentTab =\n      pathname + hash === tabRoutes.chart ? tabRoutes.chart : tabRoutes.log;\n\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Tabs\n            value={currentTab}\n            onChange={(event, value) => this.handleChangeTab(event, value)}\n            variant=\"fullWidth\"\n          >\n            <Tab label=\"Tasks Log\" value={tabRoutes.log} fullWidth />\n            <Tab label=\"Tasks chart\" value={tabRoutes.chart} fullWidth />\n          </Tabs>\n        </AppBar>\n        {currentTab === tabRoutes.log && <TasksLog />}\n        {currentTab === tabRoutes.chart && <TasksChart />}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TaskTabs);\n","import React from 'react';\nimport TaskForm from '../../components/TaskForm';\nimport TaskTabs from '../../components/TaskTabs';\n\nexport default () => (\n  <div>\n    <TaskForm />\n    <TaskTabs />\n  </div>\n);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default () => (\n  <div>\n    <Typography variant=\"h4\">Task not found</Typography>\n  </div>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport TaskNotFound from '../components/TaskNotFound';\nimport Task from '../classes/Task';\n\nconst styles = theme => ({\n  container: {\n    // display: 'flex',\n    // flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    display: 'block',\n    width: 200,\n  },\n});\n\nexport const TaskInfo = ({\n  classes,\n  tasks,\n  match: {\n    params: { taskId },\n  },\n}) => {\n  const task = tasks.find(t => t.id === parseInt(taskId));\n  if (!task) {\n    return <TaskNotFound />;\n  }\n  const { id, name, timeEnd, timeStart, timeSpent } = new Task(task);\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Task Info</Typography>\n      <form className={classes.container}>\n        <TextField\n          id=\"id\"\n          label=\"ID\"\n          type=\"text\"\n          value={id}\n          className={classes.textField}\n          disabled\n        />\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          className={classes.textField}\n        />\n        <TextField\n          id=\"start\"\n          label=\"TimeStart\"\n          type=\"text\"\n          value={timeStart}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id=\"end\"\n          label=\"TimeEnd\"\n          type=\"text\"\n          value={timeEnd}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id=\"spent\"\n          label=\"TimeSpent\"\n          type=\"text\"\n          value={timeSpent}\n          className={classes.textField}\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  tasks: state.tasks.list,\n});\nexport default withStyles(styles)(connect(mapStateToProps)(TaskInfo));\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Task from '../../components/TaskInfo';\nimport TaskNotFound from '../../components/TaskNotFound';\n\nexport default ({ match }) => {\n  return (\n    <div>\n      <Button component={Link} to=\"/\" color=\"secondary\">\n        Homepage\n      </Button>\n      <Switch>\n        <Route exact path={`${match.url}/:taskId`} component={Task} />\n        <Route component={TaskNotFound} />\n      </Switch>\n    </div>\n  );\n};\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport HomePage from './HomePage';\nimport TaskPage from './TaskPage';\n\nexport default () => (\n  <div>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/tasks\" component={TaskPage} />\n      <Route render={() => <div>Page Not Found</div>} />\n    </Switch>\n  </div>\n);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\nimport indigo from '@material-ui/core/colors/indigo';\n\nconst white = '#FFFFFF';\nconst milWhite = '#fdfdfd';\nconst lightblue = '#eaf6ff';\n\nexport default createMuiTheme({\n  palette: {\n    primary: indigo,\n  },\n  overrides: {\n    MuiInput: {\n      underline: {\n        color: indigo['900'],\n      },\n    },\n    MuiButton: {\n      text: {\n        backgroundColor: white,\n        borderRadius: 5,\n        boxShadow:\n          '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        color: indigo['900'],\n\n        '&:hover': {\n          backgroundColor: indigo['900'],\n          color: white,\n        },\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: cyan['600'],\n      },\n    },\n    MuiTableHead: {\n      root: {\n        backgroundColor: milWhite,\n      },\n    },\n    MuiTableBody: {\n      root: {\n        backgroundColor: lightblue,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        color: indigo['900'],\n      },\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { closeModal } from '../actions/modal';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  modal: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n  closeButton: {\n    float: 'right',\n  },\n});\n\nconst ModalMessage = ({ classes, isOpen, title, message, closeModal }) => {\n  return (\n    <div>\n      <Modal open={isOpen} onClose={() => closeModal()}>\n        <div className={classes.modal}>\n          <Typography variant=\"h6\" id=\"modal-title\" color={'secondary'}>\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\">{message}</Typography>\n          <Button className={classes.closeButton} onClick={() => closeModal()}>\n            Close\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  title: state.modal.title,\n  message: state.modal.message,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      closeModal,\n    },\n    dispatch\n  );\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ModalMessage)\n);\n","import React from 'react';\nimport AppRoutes from './routes';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport ModalMessage from './components/ModalMessage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <Grid container justify={'center'}>\n          <Grid item xs={10}>\n            <ModalMessage />\n            <AppRoutes />\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}